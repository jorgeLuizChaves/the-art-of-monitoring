# Sample Logstash configuration for creating a simple
# Beats -> Logstash -> Elasticsearch pipeline.

input {
  stdin { }

  beats {
    port => 5044
  }

  file {
    path => [ "/var/log/syslog", "/var/log/auth.log" ]
    type => "syslog"
  }

  tcp {
    port => 5514
    type => "syslog"
  }

  tcp {
    port => 2003
    type => "riemann"
    codec => "json"
  }

  udp {
    port => 5514
    type => "syslog"
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "(?:%{SYSLOGTIMESTAMP:syslog_timestamp}|%{TIMESTAMP_ISO8601:syslog_timestamp}) %{SYSLOGHOST:syslog_hostname}/?%{DATA:syslog_program}(?:\/%{DATA:container_image}\/%{DATA:container_name}\/%{DATA:container_id})?(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      remove_field => ["message"]
    }

    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
    }
    
    metrics {
      meter => "events"
      add_tag => "logstash_events"
    }

  }
}

output {
  stdout { }
  <% if node.default['elasticsearch']['is_to_send'] %>
    elasticsearch {
      sniffing => <%= node.default['elasticsearch']['sniffing'] %>
      hosts => "<%= node.default['elasticsearch']['address'] %>"
      index => "sandbox-%{+YYYY.MM.dd}"
    }
  <% end %>

  if "logstash_events" in [tags] {
    riemann {
      host => "<%= node.default['riemann']['address'] %>"
      sender => "%{syslog_hostname}"
      map_fields => true
      port => <%= node.default['riemann']['port'] %>
      riemann_event => {
        "service" => "logstash_events"
        "host" => "<%= node.default['logstash']['address'] %>"
      }
    }
  }
}